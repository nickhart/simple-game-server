{
	"info": {
		"_postman_id": "f820da07-38ff-48f2-88d7-8f26a910a424",
		"name": "SimpleGameServer API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43663259",
		"_collection_link": "https://nickhart.postman.co/workspace/Nick-Hart's-Workspace~0f0c2379-bc6c-49dd-8d77-bd12a58511b3/collection/43663259-f820da07-38ff-48f2-88d7-8f26a910a424?action=share&source=collection_link&creator=43663259"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Debug environment variables",
									"console.log('Environment:', pm.environment.name);",
									"console.log('api_email value:', pm.environment.get('api_email'));",
									"console.log('api_password value:', pm.environment.get('api_password'));",
									"",
									"// Debug request body",
									"const rawBody = pm.request.body.raw;",
									"console.log('Raw request body:', rawBody);",
									"",
									"// Debug variable resolution",
									"const resolvedBody = pm.variables.replaceIn(rawBody);",
									"console.log('Resolved request body:', resolvedBody);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Log the full response for debugging",
									"console.log('Response status:', pm.response.status);",
									"console.log('Response body:', pm.response.text());",
									"",
									"// Save the token if we get one",
									"const response = pm.response.json();",
									"if (response && response.token) {",
									"    pm.environment.set('jwt_token', response.token);",
									"    console.log('Token saved to environment');",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{api_email}}\",\n    \"password\": \"{{api_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "Authenticate and get JWT token"
					},
					"response": []
				}
			]
		},
		{
			"name": "Game Sessions",
			"item": [
				{
					"name": "Create Game Session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"waiting\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/game_sessions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"game_sessions"
							]
						},
						"description": "Create a new game session"
					},
					"response": []
				},
				{
					"name": "List Game Sessions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/game_sessions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"game_sessions"
							]
						},
						"description": "Get all game sessions"
					},
					"response": []
				},
				{
					"name": "Get Game Session",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/game_sessions/{{game_session_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"game_sessions",
								"{{game_session_id}}"
							]
						},
						"description": "Get a specific game session"
					},
					"response": []
				},
				{
					"name": "Cleanup Unused Games",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"before\": \"{{$datetime 'YYYY-MM-DD' -1 d}}T00:00:00Z\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/game_sessions/cleanup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"game_sessions",
								"cleanup"
							]
						},
						"description": "Delete unused game sessions created before the specified date"
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}