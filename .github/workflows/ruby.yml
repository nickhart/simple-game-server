name: Tests

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: simple_game_server_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      RAILS_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:5432/simple_game_server_test
      PGHOST: 127.0.0.1
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: postgres
      SECRET_KEY_BASE: 0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4.2'
        bundler-cache: true

    - name: Install PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client

    - name: Run linter
      run: bundle exec rubocop

    - name: Debug PostgreSQL
      run: |
        echo "Checking PostgreSQL service status..."
        sudo systemctl status postgresql || true
        echo "Checking listening ports..."
        sudo netstat -tulpn | grep LISTEN || true
        echo "Checking PostgreSQL logs..."
        sudo find /var/log -name "postgresql*" -exec ls -l {} \; || true

    - name: Wait for PostgreSQL
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        for i in {1..30}; do
          if pg_isready -h 127.0.0.1 -p 5432 -U postgres; then
            echo "PostgreSQL is ready!"
            psql -h 127.0.0.1 -p 5432 -U postgres -c '\l' || echo "Failed to list databases"
            break
          fi
          echo "Attempt $i: PostgreSQL is not ready yet..."
          sleep 5
        done
        echo "Maximum wait time reached"

    - name: Setup test database
      run: |
        echo "Current environment variables:"
        env | grep -E 'PG|DATABASE'
        echo "Attempting to create test database..."
        bin/rails db:drop db:create db:schema:load db:test:prepare RAILS_ENV=test || (echo "Database setup failed. Checking connection..." && psql -h 127.0.0.1 -p 5432 -U postgres -c '\l')

    - name: Run all tests
      run: |
        bin/rails test test:system

    - name: Keep screenshots from failed system tests
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: screenshots
        path: tmp/screenshots
        if-no-files-found: ignore 